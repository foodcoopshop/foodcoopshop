# Query: editOrderDetailQuantity
# Including: *.php
# Excluding: ./foodcoopshop/vendor
# ContextLines: 1

16 results - 1 file

foodcoopshop • plugins/Admin/tests/TestCase/src/Controller/OrderDetails/OrderDetailsControllerEditQuantityTest.php:
   25  
   26:     public function testEditOrderDetailQuantityNotValid()
   27      {

   30          $orderDetailId = $cart->cart_products[0]->order_detail->id_order_detail;
   31:         $this->editOrderDetailQuantity($orderDetailId, -1);
   32          $this->assertEquals($this->getJsonDecodedContent()->msg, 'Das gelieferte Gewicht ist nicht gültig.');

   34  
   35:     public function testEditOrderDetailQuantityAsSuperadminDifferentQuantity()
   36      {

   44          $orderDetailId = $cart->cart_products[0]->order_detail->id_order_detail;
   45:         $this->editOrderDetailQuantity($orderDetailId, $newQuantity);
   46  

   67  
   68:     public function testEditOrderDetailQuantityAsSuperadminDifferentQuantityPurchasePriceAvailable()
   69      {

   76          $orderDetailId = $cart->cart_products[0]->order_detail->id_order_detail;
   77:         $this->editOrderDetailQuantity($orderDetailId, $newQuantity);
   78  

   94  
   95:     public function testEditOrderDetailQuantityAsSuperadminSameQuantity()
   96      {

  102          $orderDetailId = $cart->cart_products[0]->order_detail->id_order_detail;
  103:         $this->editOrderDetailQuantity($orderDetailId, $newQuantity);
  104  

  117  
  118:     public function testEditOrderDetailQuantityAsSuperadminEmailDisabledWithConfig()
  119      {

  123          $orderDetailId = $cart->cart_products[0]->order_detail->id_order_detail;
  124:         $this->editOrderDetailQuantity($orderDetailId, 800.854);
  125          $this->assertMailCount(1);

  127  
  128:     public function testEditOrderDetailQuantityAsSuperadminUserUsedWrongUnit()
  129      {

  132          $orderDetailId = $cart->cart_products[0]->order_detail->id_order_detail;
  133:         $this->editOrderDetailQuantity($orderDetailId, 0.7);
  134          $this->assertEquals($this->getJsonDecodedContent()->msg, 'Der neue Preis wäre <b>0,01 €</b> für <b>0,7 g</b>. Bitte überprüfe die Einheit.');
  135:         $this->editOrderDetailQuantity($orderDetailId, 800000);
  136          $this->assertEquals($this->getJsonDecodedContent()->msg, 'Der neue Preis wäre <b>12.000,00 €</b> für <b>800.000 g</b>. Bitte überprüfe die Einheit.');

  143      /*
  144:     public function testEditOrderDetailQuantityAsSuperadminWithHugeQuantity()
  145      {

  154          $newQuantity = 8000;
  155:         $this->editOrderDetailQuantity($orderDetailId, $newQuantity);
  156  

  179  
  180:     private function editOrderDetailQuantity($orderDetailId, $productQuantity)
  181      {
