name: FoodCoopShop CI

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  ci:
    runs-on: ubuntu-22.04
    name: FoodCoopShop CI
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Docker images
        uses: ScribeMD/docker-cache@0.3.7
        with:
          key: docker-images-${{ hashFiles('./docker-compose.yml') }}-${{ hashFiles('./Dockerfile') }}

      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: ./webroot/node_modules
          key: node-modules-${{ hashFiles('./webroot/package.json') }}-${{ hashFiles('./webroot/package-lock.json') }}

      - name: Cache Composer Dependencies
        uses: actions/cache@v4
        with:
          path: ./vendor
          key: composer-${{ hashFiles('./composer.json') }}-${{ hashFiles('./comopser.lock') }}

      - name: Run Docker Compose
        run: CURRENT_UID=$(id -u):$(id -g) docker compose up -d php-nginx database-test

      - name: Setup Dev Environment
        run: |
          # do not use ./devtools/init-dev-setup.sh because dev db is not needed
          bash ./devtools/installation/set-permissions.sh
          bash ./devtools/setup-dev/copy-config-files.sh
          docker exec -w /app fcs.php composer install
          docker exec -w /app/webroot fcs.php npm install

      - name: Apply secrets
        run: |
          sed -i 's/HELLO_CASH_TOKEN/${{secrets.HELLO_CASH_TOKEN}}/' ./config/custom_config.php
          sed -i 's/HELLO_CASH_USERNAME/${{secrets.HELLO_CASH_USERNAME}}/' ./config/custom_config.php
          sed -i 's/HELLO_CASH_PASSWORD/${{secrets.HELLO_CASH_PASSWORD}}/' ./config/custom_config.php
          sed -i 's/HELLO_CASH_CASHIER_ID/${{secrets.HELLO_CASH_CASHIER_ID}}/' ./config/custom_config.php

      - name: Upload files to server
        if: ${{github.event_name == 'push'}}
        uses: up9cloud/action-rsync@master
        env:
          HOST: ${{secrets.DEPLOY_HOST}}
          USER: ${{secrets.DEPLOY_USER}}
          KEY: ${{secrets.DEPLOY_SSH_KEY}}
          SOURCE: ./webroot
          TARGET: ${{secrets.DEPLOY_PATH}}/builds/${{github.ref}}
          RUN_SCRIPT_ON: remote
          PRE_SCRIPT: |
              echo ${{secrets.DEPLOY_PATH}}/builds/${{github.ref}}
              mkdir -p ${{secrets.DEPLOY_PATH}}/builds/${{github.ref}}
          SSH_ARGS: '-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'

      - name: PHPStan
        run: docker exec -w /app fcs.php php ./vendor/bin/phpstan analyze -c phpstan.neon --no-interaction --no-progress

      - name: ESLint
        run: docker exec -w /app fcs.php bash ./devtools/eslint.sh

      - name: PHPUnit Tests
        run: docker exec -w /app fcs.php php ./vendor/bin/phpunit --coverage-clover ./coverage.xml

      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
